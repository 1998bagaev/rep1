#include <iostream>
#include <conio.h>
using namespace std;
struct Tree
{
	Tree *l, *r; 
	int x; 
};

/*ФУНКЦИЯ ДОБАВЛЕНИЯ ЗВЕНА В ДЕРЕВО*/
void Add(int x, Tree **Node) //В функцию принимается указатель на элемент данных и указатель на указатель на структуру
{
	if ((*Node == NULL))  //Если дерева не существует
	{
		(*Node) = new Tree; //Выделяем для него память
		(*Node)->l = (*Node)->r = NULL; //И очищаем пути дальнейшего роста
		(*Node)->x = x; //Записываем информацию в узел на выделенное место
	}
}

/*ОБХОД В ПРЯМОМ ПОРЯДКЕ*/
void Show(Tree *Node)
{
	if (Node == NULL)    return;    //Если дерева нет, выходим

	cout << Node->x << endl; //Посетили узел
	Show(Node->l); //Обошли левое поддерево    
	Show(Node->r); //Обошли правое поддерево    
}

/*ОБХОД В ОБРАТНОМ ПОРЯДКЕ*/
void Show(Tree *Node)
{
	if (Node == NULL)    return;    //Если дерева нет, выходим

	Show(Node->l); //Обошли левое поддерево  
	Show(Node->r); //Обошли правое поддерево  
	cout << Node->x << endl; //Посетили узел  
}

/*ОБХОД В СИММЕТРИЧНОМ ПОРЯДКЕ*/
void Show(Tree *Node)
{
	if (Node == NULL)    return;    //Если дерева нет, выходим

	Show(Node->l); //Обошли левое поддерево  
	cout << Node->x << endl; //Посетили узел
	Show(Node->r); //Обошли правое поддерево    
}

void main()
{
	int x; //Некоторые данные
	Tree *MyTree = NULL; //Указатель на нашу структуру. Инициализируем во избежание ошибок

	for (int i = 0; i < 7; i++) //В дереве будет 7 узлов
	{
		cout << "X = "; cin >> x; //Ввели X с клавиатуры
		Add(x, &MyTree); //Добавили X в дерево
	}
}
